networks:
  datn-network:
    driver: bridge

volumes:
  frontend_node_modules:

services:
  # docker-compose -f docker-compose.dev.yml up --build frontend
  frontend:
    build:
      context: .
      dockerfile: ./dockerfiles/frontend.dev.dockerfile
    container_name: datn-frontend
    working_dir: /app
    ports:
      - "8080:8080"  # Main app port
      - "9000:9000"  # WebSocket port for HMR
    volumes:
      - ./frontend:/app:cached  # Bind mount with performance optimization
      - frontend_node_modules:/app/node_modules  # Named volume for node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true  # Better file watching for Docker
      - HOST=0.0.0.0  # Allow connections from outside the container
      - QUASAR_DEV_SERVER_PUBLIC=0.0.0.0  # Required for HMR
    command: sh -c "pnpm install && quasar dev"
    # Enable better terminal support
    tty: true
    stdin_open: true
    # Restart policy for development
    restart: unless-stopped
    # Resource constraints
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    networks:
      - datn-network

#  # docker compose -f docker-compose.dev.yml run --rm --user $(id -u):$(id -g) frontend-init
#  frontend-init:
#    image: node:22-alpine
#    volumes:
#      - .:/app:rw,Z  # Mount project root instead
#    working_dir: /app
#    command: >
#      sh -c "corepack enable &&
#             corepack prepare pnpm@latest --activate &&
#             exec /bin/sh -c 'pnpm create quasar'"
#    stdin_open: true
#    tty: true
#    profiles:
#      - init
